--- Step 1 to Step 3 below shows the codes used in populating the PropertyAddress column using the ParcelID column

Select a.ParcelID,a.PropertyAddress,b.ParcelID,b.PropertyAddress
from NASHIVLLEHOUSING a
JOIN NASHIVLLEHOUSING b
	on a.ParcelID = b.ParcelID
	AND a.[UniqueID] <> b.[UniqueID]
WHERE a.PropertyAddress is NULL

-- Step 1: Create a new table without null values in the "PropertyAddress" column
CREATE TABLE new_table (ParcelID TEXT,PropertyAddress TEXT)

Step 2: Insert non-null rows from the original table into the new table

INSERT INTO new_table (ParcelID, PropertyAddress)
SELECT ParcelID, PropertyAddress
FROM NASHIVLLEHOUSING
WHERE PropertyAddress IS NOT NULL

-- Step 3: Drop the original table
DROP TABLE NASHIVLLEHOUSING

select *
from NASHViLLEHOUSING

order by PropertyAddress

UPDATE NASHViLLEHOUSING
SET PropertyAddress = ParcelID
WHERE PropertyAddress IS NULL


-- the code below is used to remove duplicate from my data set

Select DISTINCT *
from NASHViLLEHOUSING
Select *
from NASHViLLEHOUSING
where FullBath,Is NOT NULL

I Changed Y and N to Yes and No in "Sold as Vacant" field and the code below was what I used to acheive this


Select Distinct(SoldAsVacant), Count(SoldAsVacant)
From NASHViLLEHOUSING
Group by SoldAsVacant
order by 2

Select SoldAsVacant
	CASE When SoldAsVacant = 'Y' THEN 'Yes'
	   When SoldAsVacant = 'N' THEN 'No'
	   ELSE SoldAsVacant
	   END
From NASHViLLEHOUSING

--I uses the code below to update my dataset

Update NashvilleHousing
SET SoldAsVacant = CASE When SoldAsVacant = 'Y' THEN 'Yes'
	   When SoldAsVacant = 'N' THEN 'No'
	   ELSE SoldAsVacant
	   END